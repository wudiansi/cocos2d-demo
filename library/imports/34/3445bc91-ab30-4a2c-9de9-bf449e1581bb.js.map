{"version":3,"sources":["assets\\scripts\\Game.js"],"names":["cc","Class","Component","properties","scoreDisplay","type","Label","starPrefab","Prefab","maxStarDuration","minStarDuration","ground","Node","player","scoreAudio","AudioClip","onLoad","timer","starDuration","score","groundY","y","height","createNewStar","gameOver","stopAllActions","director","loadScene","gainScore","string","audioEngine","playEffect","Math","random","newStar","instantiate","node","addChild","setPosition","getNewStarPosition","getComponent","game","randX","randY","jumpHeight","maxX","width","v2","start","update","dt"],"mappings":"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","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // 得分label\r\n        scoreDisplay: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        // 星星预载素材\r\n        starPrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n\r\n        // 星星消失后的随机范围\r\n        maxStarDuration: 0,\r\n        minStarDuration: 0,\r\n\r\n        // 地面节点 为展示星星的高度\r\n        ground: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n\r\n        // player节点 为获取弹跳、高度 以及控制主角活动开关\r\n        player: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        scoreAudio: {\r\n            default: null,\r\n            type: cc.AudioClip\r\n        },\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        // 初始化计时器\r\n        this.timer = 0;\r\n        // 初始化计时器时长\r\n        this.starDuration = 0;\r\n        // 初始化分数\r\n        this.score = 0;\r\n        // 获取平面y坐标\r\n        this.groundY = this.ground.y + this.ground.height / 2\r\n        // 生成一个新星星\r\n        this.createNewStar()\r\n    },\r\n\r\n    gameOver() {\r\n        // 游戏结束 停止所有动画\r\n        this.player.stopAllActions()\r\n        // 重新加载Game sence\r\n        cc.director.loadScene('Game')\r\n    },\r\n\r\n    gainScore() {\r\n        // 累加得分\r\n        this.score += 1;\r\n        this.scoreDisplay.string = `Score: ${this.score}`;\r\n        // 得分音效\r\n        cc.audioEngine.playEffect(this.scoreAudio, this);\r\n    },\r\n\r\n    createNewStar() {\r\n        // 初始化这个星星的可存在碰撞时间、计时器\r\n        this.starDuration = this.minStarDuration + Math.random() * (this.maxStarDuration - this.minStarDuration);\r\n\r\n        this.timer = 0;\r\n\r\n        // 给定模板中生成一个新节点\r\n        let newStar = cc.instantiate(this.starPrefab);\r\n\r\n        // 插入到场景中\r\n        this.node.addChild(newStar)\r\n\r\n        // 设置位置\r\n        newStar.setPosition(this.getNewStarPosition())\r\n\r\n        // 在星星组件上保存Game对象的引用\r\n        newStar.getComponent('Star').game = this\r\n    },\r\n\r\n    getNewStarPosition() {\r\n        let randX = 0\r\n        // 根据平面位置和星星高度 随机得到一个星星的y坐标\r\n        let randY = this.groundY + Math.random() * this.player.getComponent('Player').jumpHeight + 50\r\n        // 根据屏幕宽度随机得到一个x坐标\r\n        let maxX = this.node.width / 2\r\n        randX = (Math.random() - 0.5) * 2 * maxX\r\n        // 返回坐标\r\n        return cc.v2(randX, randY)\r\n    },\r\n\r\n    start() {\r\n\r\n    },\r\n\r\n    update (dt) {\r\n        // 超时没有清除duration时间 停止游戏\r\n        if(this.timer >= this.starDuration) {\r\n            this.gameOver();\r\n            return\r\n        }\r\n        this.timer += dt\r\n    },\r\n});\r\n"]}